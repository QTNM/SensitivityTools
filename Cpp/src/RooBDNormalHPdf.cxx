/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

// Your description goes here...

#include "RooBDNormalHPdf.h"

#include <RooAbsReal.h>
#include <RooAbsCategory.h>

#include <Riostream.h>
#include <TMath.h>

#include <cmath>

ClassImp(RooBDNormalHPdf);

RooBDNormalHPdf::RooBDNormalHPdf(const char *name, const char *title,
				 RooAbsReal& _en,
				 RooAbsReal& _munu)
   : RooAbsPdf(name,title),
   en("en","en",this,_en),
   munu("munu","munu",this,_munu)
{
}

RooBDNormalHPdf::RooBDNormalHPdf(RooBDNormalHPdf const &other, const char *name)
   : RooAbsPdf(other,name),
   en("en",this,other.en),
   munu("munu",this,other.munu)
{
}


double RooBDNormalHPdf::evaluate() const 
{
   return RooBDNormalHPdf_evaluate(en, munu); 
}

void RooBDNormalHPdf::doEval(RooFit::EvalContext &ctx) const 
{ 
   std::span<const double> enSpan = ctx.at(en);
   std::span<const double> munuSpan = ctx.at(munu);

   std::size_t n = ctx.output().size();
   for (std::size_t i = 0; i < n; ++i) {
      ctx.output()[i] = RooBDNormalHPdf_evaluate(enSpan.size() > 1 ? enSpan[i] : enSpan[0],
						 munuSpan.size() > 1 ? munuSpan[i] : munuSpan[0]);
   }
} 

void RooBDNormalHPdf::translate(RooFit::Detail::CodeSquashContext &ctx) const
{
   ctx.addResult(this, ctx.buildCall("RooBDNormalHPdf_evaluate", en, munu));
}
