/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

// Your description goes here...

#include "RooBDNormalSterilePdf.h"

#include <RooAbsReal.h>
#include <RooAbsCategory.h>

#include <Riostream.h>
#include <TMath.h>

#include <cmath>

ClassImp(RooBDNormalSterilePdf);

RooBDNormalSterilePdf::RooBDNormalSterilePdf(const char *name, const char *title,
					     RooAbsReal& _en,
					     RooAbsReal& _munu,
					     RooAbsReal& _mN,
					     RooAbsReal& _eta )
  : RooAbsPdf(name,title),
    en("en","en",this,_en),
    munu("munu","munu",this,_munu),
    mN("mN","mN",this,_mN),
    eta("eta","eta",this,_eta)
{
}

RooBDNormalSterilePdf::RooBDNormalSterilePdf(RooBDNormalSterilePdf const &other, const char *name)
  : RooAbsPdf(other,name),
    en("en",this,other.en),
    munu("munu",this,other.munu),
    mN("mN",this,other.mN),
    eta("eta",this,other.eta)
{
}


double RooBDNormalSterilePdf::evaluate() const 
{
  return RooBDNormalSterilePdf_evaluate(en, munu, mN, eta); 
}

void RooBDNormalSterilePdf::doEval(RooFit::EvalContext &ctx) const 
{ 
   std::span<const double> enSpan = ctx.at(en);
   std::span<const double> munuSpan = ctx.at(munu);
   std::span<const double> mNSpan = ctx.at(mN);
   std::span<const double> etaSpan = ctx.at(eta);

   std::size_t n = ctx.output().size();
   for (std::size_t i = 0; i < n; ++i) {
     ctx.output()[i] = RooBDNormalSterilePdf_evaluate(enSpan.size() > 1 ? enSpan[i] : enSpan[0],
						      munuSpan.size() > 1 ? munuSpan[i] : munuSpan[0],
						      mNSpan.size() > 1 ? mNSpan[i] : mNSpan[0],
						      etaSpan.size() > 1 ? etaSpan[i] : etaSpan[0]);
   }
} 

void RooBDNormalSterilePdf::translate(RooFit::Detail::CodeSquashContext &ctx) const
{
  ctx.addResult(this, ctx.buildCall("RooBDNormalSterilePdf_evaluate", en, munu, mN, eta));
}
