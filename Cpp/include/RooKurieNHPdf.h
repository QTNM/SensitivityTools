/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef RooKurieNHPdf_h
#define RooKurieNHPdf_h

#include <RooAbsPdf.h>
#include <RooRealProxy.h>
#include <RooCategoryProxy.h>
#include <RooAbsReal.h>
#include <RooAbsCategory.h>

#include <complex>
#include <iostream>
#include "TBetaTools.hh"

class RooKurieNHPdf : public RooAbsPdf {
public:
  RooKurieNHPdf() {}
  inline RooKurieNHPdf(const char *name, const char *title,
		       RooAbsReal& _en, RooAbsReal& _munu)
    : RooKurieNHPdf{name, title, RooAbsReal::Ref{_en}, RooAbsReal::Ref{_munu}} {}

  RooKurieNHPdf(const char *name, const char *title,        RooAbsReal::Ref _en,
		RooAbsReal::Ref _munu);
  RooKurieNHPdf(RooKurieNHPdf const &other, const char *name=nullptr);
  TObject* clone(const char *newname) const override { return new RooKurieNHPdf(*this, newname); }

protected:

  RooRealProxy en ;
  RooRealProxy munu ;

  double evaluate() const override;
  void doEval(RooFit::EvalContext &) const override;
  void translate(RooFit::Detail::CodeSquashContext &ctx) const override;

private:

  ClassDefOverride(RooKurieNHPdf, 1)
};

inline double RooKurieNHPdf_evaluate(double x, double mn) 
{
  return TBTools::KurieTrsf(x, TBeta::dGammadE(true, mn, 0.0, 0.0, x));
}


#endif // RooKurieNHPdf_h
